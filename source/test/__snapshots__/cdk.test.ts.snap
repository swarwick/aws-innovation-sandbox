// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InnovationSandboxMain 1`] = `
{
  "Description": "Test",
  "Outputs": {
    "ManagementAccountID": {
      "Description": "Account ID of the Management Account",
      "Value": {
        "Fn::GetAtt": [
          "InnovationCreateAccountOU",
          "Appstream_Account_ID",
        ],
      },
    },
    "SandboxAccountID": {
      "Description": "Account ID of the Sandbox Account",
      "Value": {
        "Fn::GetAtt": [
          "InnovationCreateAccountOU",
          "Sandbox_Account_ID",
        ],
      },
    },
  },
  "Parameters": {
    "AppstreamManagementAccountEmail": {
      "Description": "Email for Appstream Management Account",
      "Type": "String",
    },
    "AppstreamManagementAccountName": {
      "Description": "Account Name for Appstream Management Account",
      "Type": "String",
    },
    "AppstreamManagementOUName": {
      "Description": "OU Name for Appstream Management Account",
      "Type": "String",
    },
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SandboxAccountEmail": {
      "Description": "Email for Sandbox Account",
      "Type": "String",
    },
    "SandboxAccountName": {
      "Description": "Account Name for Sandbox Account",
      "Type": "String",
    },
    "SandboxOUName": {
      "Description": "OU Name for Sandbox Account",
      "Type": "String",
    },
  },
  "Resources": {
    "CreateAccountOU43324AB7": {
      "DependsOn": [
        "CreateAccountOURolePolicy6A78E603",
        "l0roleBD657D29",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda function already has permission to write CloudWatch Logs",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "Sample-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "InvSbx/v1.0.0/InnovationSandbox.zip",
        },
        "Handler": "innovation_create_account_ou.main",
        "Role": {
          "Fn::GetAtt": [
            "l0roleBD657D29",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CreateAccountOURolePolicy6A78E603": {
      "DependsOn": [
        "l0roleBD657D29",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Specified actions do not apply to specific resources",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:/aws/lambda/\${AWS::StackName}*:*",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/SandboxAdminExecutionRole",
            },
            {
              "Action": [
                "organizations:ListRoots",
                "organizations:MoveAccount",
                "organizations:DescribeCreateAccountStatus",
                "organizations:ListParents",
                "organizations:ListAccounts",
                "organizations:ListOrganizationalUnitsForParent",
                "organizations:CreateOrganizationalUnit",
                "organizations:CreateAccount",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CreateAccountOURolePolicy6A78E603",
        "Roles": [
          {
            "Ref": "l0roleBD657D29",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeleteDefaultVPCs69C07E47": {
      "DependsOn": [
        "l1roleDefaultPolicy980E9EE3",
        "l1role35F8C866",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda function already has permission to write CloudWatch Logs",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "Sample-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "InvSbx/v1.0.0/InnovationSandbox.zip",
        },
        "Handler": "innovation_delete_default_vpcs.main",
        "Role": {
          "Fn::GetAtt": [
            "l1role35F8C866",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "InnovationAcceptResourceShare": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "InnovationRunMgmtStack",
      ],
      "Properties": {
        "Sandbox_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Sandbox_Account_ID",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "TGWResourceShareBB856A09",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "InnovationAttachSCPs": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "InnovationTGWRouteTables",
      ],
      "Properties": {
        "SCPGD": {
          "Fn::Sub": "\${AWS::StackName}_guardrails_scp",
        },
        "SCPNTWRK": {
          "Fn::Sub": "\${AWS::StackName}_network_scp",
        },
        "Sandbox_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Sandbox_Account_ID",
          ],
        },
        "Sandbox_OU": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Sandbox_OU",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "SBXSCPB59FCFE7",
            "Arn",
          ],
        },
        "Template_Base_Path": {
          "Fn::Join": [
            "",
            [
              "https://Sample-",
              {
                "Ref": "AWS::Region",
              },
              ".s3.amazonaws.com/InvSbx/v1.0.0/",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "InnovationCreateAccountOU": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Mgmt_Email": {
          "Ref": "AppstreamManagementAccountEmail",
        },
        "Mgmt_Name": {
          "Ref": "AppstreamManagementAccountName",
        },
        "Mgmt_OU_Name": {
          "Ref": "AppstreamManagementOUName",
        },
        "Sbx_Email": {
          "Ref": "SandboxAccountEmail",
        },
        "Sbx_Name": {
          "Ref": "SandboxAccountName",
        },
        "Sbx_OU_Name": {
          "Ref": "SandboxOUName",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CreateAccountOU43324AB7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "InnovationDeleteDefaultVPCs": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "InnovationCreateAccountOU",
      ],
      "Properties": {
        "Appstream_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Appstream_Account_ID",
          ],
        },
        "Sandbox_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Sandbox_Account_ID",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeleteDefaultVPCs69C07E47",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "InnovationRunMgmtStack": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "InnovationDeleteDefaultVPCs",
      ],
      "Properties": {
        "Appstream_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Appstream_Account_ID",
          ],
        },
        "Sandbox_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Sandbox_Account_ID",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "RunMgmtStack4783694C",
            "Arn",
          ],
        },
        "Template_Base_Path": {
          "Fn::Join": [
            "",
            [
              "https://Sample-",
              {
                "Ref": "AWS::Region",
              },
              ".s3.amazonaws.com/InvSbx/v1.0.0/",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "InnovationRunSbxStack": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "InnovationAcceptResourceShare",
      ],
      "Properties": {
        "Appstream_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Appstream_Account_ID",
          ],
        },
        "EIP": {
          "Fn::GetAtt": [
            "InnovationRunMgmtStack",
            "EIP",
          ],
        },
        "EIP2": {
          "Fn::GetAtt": [
            "InnovationRunMgmtStack",
            "EIP2",
          ],
        },
        "Sandbox_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Sandbox_Account_ID",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "RunSbxStack93A1B944",
            "Arn",
          ],
        },
        "Template_Base_Path": {
          "Fn::Join": [
            "",
            [
              "https://Sample-",
              {
                "Ref": "AWS::Region",
              },
              ".s3.amazonaws.com/InvSbx/v1.0.0/",
            ],
          ],
        },
        "Tgw_ID": {
          "Fn::GetAtt": [
            "InnovationRunMgmtStack",
            "TGW_ID",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "InnovationTGWRouteTables": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "InnovationRunSbxStack",
      ],
      "Properties": {
        "Appstream_Account_ID": {
          "Fn::GetAtt": [
            "InnovationCreateAccountOU",
            "Appstream_Account_ID",
          ],
        },
        "Egress_Attach": {
          "Fn::GetAtt": [
            "InnovationRunMgmtStack",
            "EGRESS_ATTACH_ID",
          ],
        },
        "Sbx_Attach": {
          "Fn::GetAtt": [
            "InnovationRunSbxStack",
            "SBX_Attach_ID",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "TGWRouteTables56E457E7",
            "Arn",
          ],
        },
        "Template_Base_Path": {
          "Fn::Join": [
            "",
            [
              "https://Sample-",
              {
                "Ref": "AWS::Region",
              },
              ".s3.amazonaws.com/InvSbx/v1.0.0/",
            ],
          ],
        },
        "Tgw_ID": {
          "Fn::GetAtt": [
            "InnovationRunMgmtStack",
            "TGW_ID",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "RunMgmtStack4783694C": {
      "DependsOn": [
        "l2roleDefaultPolicy8236CDE6",
        "l2role69319EAA",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda function already has permission to write CloudWatch Logs",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "Sample-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "InvSbx/v1.0.0/InnovationSandbox.zip",
        },
        "Handler": "innovation_run_mgmt_stack.main",
        "Role": {
          "Fn::GetAtt": [
            "l2role69319EAA",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RunSbxStack93A1B944": {
      "DependsOn": [
        "l4roleDefaultPolicy8550EE28",
        "l4roleF446F1EF",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda function already has permission to write CloudWatch Logs",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "Sample-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "InvSbx/v1.0.0/InnovationSandbox.zip",
        },
        "Handler": "innovation_run_sbx_stack.main",
        "Role": {
          "Fn::GetAtt": [
            "l4roleF446F1EF",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SBXSCPB59FCFE7": {
      "DependsOn": [
        "l6role22D9B41F",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda function already has permission to write CloudWatch Logs",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "Sample-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "InvSbx/v1.0.0/InnovationSandbox.zip",
        },
        "Handler": "innovation_sbx_attach_scp.main",
        "Role": {
          "Fn::GetAtt": [
            "l6role22D9B41F",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SBXSCPRolePolicy2C2F2B57": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "CreatePolicy action does not apply to specific resource",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:/aws/lambda/\${AWS::StackName}*:*",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/SandboxAdminExecutionRole",
            },
            {
              "Action": "organizations:CreatePolicy",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "organizations:AttachPolicy",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:organizations::\${AWS::AccountId}:*/*",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SBXSCPRolePolicy2C2F2B57",
        "Roles": [
          {
            "Ref": "l6role22D9B41F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TGWResourceShareBB856A09": {
      "DependsOn": [
        "l3roleDefaultPolicy9803DF35",
        "l3role61B393CD",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda function already has permission to write CloudWatch Logs",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "Sample-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "InvSbx/v1.0.0/InnovationSandbox.zip",
        },
        "Handler": "innovation_accept_resource_share.main",
        "Role": {
          "Fn::GetAtt": [
            "l3role61B393CD",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TGWRouteTables56E457E7": {
      "DependsOn": [
        "l5roleDefaultPolicy830E2F91",
        "l5role92F088EA",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda function already has permission to write CloudWatch Logs",
            },
            {
              "id": "W89",
              "reason": "VPC Not setup yet - Default VPC is deleted",
            },
            {
              "id": "W92",
              "reason": "Setup Lambda - Concurrent executions not needed",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "Sample-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "InvSbx/v1.0.0/InnovationSandbox.zip",
        },
        "Handler": "innovation_tgw_route_tables.main",
        "Role": {
          "Fn::GetAtt": [
            "l5role92F088EA",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "l0roleBD657D29": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "l1role35F8C866": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "l1roleDefaultPolicy980E9EE3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:/aws/lambda/\${AWS::StackName}*:*",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/SandboxAdminExecutionRole",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "l1roleDefaultPolicy980E9EE3",
        "Roles": [
          {
            "Ref": "l1role35F8C866",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "l2role69319EAA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "l2roleDefaultPolicy8236CDE6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:/aws/lambda/\${AWS::StackName}*:*",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/SandboxAdminExecutionRole",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "l2roleDefaultPolicy8236CDE6",
        "Roles": [
          {
            "Ref": "l2role69319EAA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "l3role61B393CD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "l3roleDefaultPolicy9803DF35": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:/aws/lambda/\${AWS::StackName}*:*",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/SandboxAdminExecutionRole",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "l3roleDefaultPolicy9803DF35",
        "Roles": [
          {
            "Ref": "l3role61B393CD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "l4roleDefaultPolicy8550EE28": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:/aws/lambda/\${AWS::StackName}*:*",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/SandboxAdminExecutionRole",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "l4roleDefaultPolicy8550EE28",
        "Roles": [
          {
            "Ref": "l4roleF446F1EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "l4roleF446F1EF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "l5role92F088EA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "l5roleDefaultPolicy830E2F91": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:logs:\${AWS::Region}:\${AWS::AccountId}:log-group:/aws/lambda/\${AWS::StackName}*:*",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/SandboxAdminExecutionRole",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "l5roleDefaultPolicy830E2F91",
        "Roles": [
          {
            "Ref": "l5role92F088EA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "l6role22D9B41F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`InnovationSandboxMgmt 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SbxAccountId": {
      "Description": "SbxAccountId",
      "Type": "String",
    },
    "UUID": {
      "Description": "UUID",
      "Type": "String",
    },
  },
  "Resources": {
    "CloudTrailA62D711D": {
      "DependsOn": [
        "mgmtbucketPolicy0C4C568E",
      ],
      "Properties": {
        "EnableLogFileValidation": true,
        "EventSelectors": [],
        "IncludeGlobalServiceEvents": true,
        "IsLogging": true,
        "IsMultiRegionTrail": true,
        "S3BucketName": {
          "Ref": "mgmtbucket71519174",
        },
        "TrailName": "mgmt-cloudtrail",
      },
      "Type": "AWS::CloudTrail::Trail",
    },
    "FlowLogsFlowLog13041F74": {
      "DependsOn": [
        "mgmtflowlogsbucketPolicy5B1CD48D",
      ],
      "Properties": {
        "LogDestination": {
          "Fn::GetAtt": [
            "mgmtflowlogsbucket5BA94782",
            "Arn",
          ],
        },
        "LogDestinationType": "s3",
        "ResourceId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "ISAppStreamMgmtVPC7423BC26": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ISAppStreamMgmtVPCIGWD8F23F1A": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ISAppStreamMgmtVPCVPCGWDC210076": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "ISAppStreamMgmtVPCIGWD8F23F1A",
        },
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1DefaultRoute6A3C9021": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1NATGateway070AEBC5",
        },
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1RouteTable8C69A9E4",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1RouteTable8C69A9E4": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/private_innovation_mgmtSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1RouteTableAssociationC02DCECE": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1RouteTable8C69A9E4",
        },
        "SubnetId": {
          "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1Subnet70686A5C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1Subnet70686A5C": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private_innovation_mgmt",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/private_innovation_mgmtSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2DefaultRoute040A1498": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2NATGatewayA73C22D8",
        },
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2RouteTable925CE157",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2RouteTable925CE157": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/private_innovation_mgmtSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2RouteTableAssociation6BB3EE33": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2RouteTable925CE157",
        },
        "SubnetId": {
          "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2Subnet58B91D59",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2Subnet58B91D59": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private_innovation_mgmt",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/private_innovation_mgmtSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1DefaultRoute4ECEBDDE": {
      "DependsOn": [
        "ISAppStreamMgmtVPCVPCGWDC210076",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ISAppStreamMgmtVPCIGWD8F23F1A",
        },
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1RouteTable3532B91B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1EIP4D40A779": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1NATGateway070AEBC5": {
      "DependsOn": [
        "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1DefaultRoute4ECEBDDE",
        "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1RouteTableAssociation6F9C2C4C",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1EIP4D40A779",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1Subnet96C4417D",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1RouteTable3532B91B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1RouteTableAssociation6F9C2C4C": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1RouteTable3532B91B",
        },
        "SubnetId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1Subnet96C4417D",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1Subnet96C4417D": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public_innovation_mgmt",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2DefaultRoute60FAA522": {
      "DependsOn": [
        "ISAppStreamMgmtVPCVPCGWDC210076",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ISAppStreamMgmtVPCIGWD8F23F1A",
        },
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2RouteTable76B2FB56",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2EIP995FD5A6": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2NATGatewayA73C22D8": {
      "DependsOn": [
        "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2DefaultRoute60FAA522",
        "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2RouteTableAssociation40C14A3E",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2EIP995FD5A6",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2Subnet6F2580C7",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2RouteTable76B2FB56": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2RouteTableAssociation40C14A3E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2RouteTable76B2FB56",
        },
        "SubnetId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2Subnet6F2580C7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2Subnet6F2580C7": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public_innovation_mgmt",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxManagementTestStack/ISAppStreamMgmtVPC/public_innovation_mgmtSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISAppStreamMgmtVPCroute0": {
      "DependsOn": [
        "ISTransitGatewayAttachmentEgress",
      ],
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/16",
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet1RouteTable3532B91B",
        },
        "TransitGatewayId": {
          "Ref": "ISTransitGateway",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISAppStreamMgmtVPCroute1": {
      "DependsOn": [
        "ISTransitGatewayAttachmentEgress",
      ],
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/16",
        "RouteTableId": {
          "Ref": "ISAppStreamMgmtVPCpublicinnovationmgmtSubnet2RouteTable76B2FB56",
        },
        "TransitGatewayId": {
          "Ref": "ISTransitGateway",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISTGWShareAppStream": {
      "Properties": {
        "Name": "ISTGWShareAppStream",
        "Principals": [
          {
            "Ref": "SbxAccountId",
          },
        ],
        "ResourceArns": [
          {
            "Fn::Sub": "arn:aws:ec2:\${AWS::Region}:\${AWS::AccountId}:transit-gateway/\${ISTransitGateway}",
          },
        ],
      },
      "Type": "AWS::RAM::ResourceShare",
    },
    "ISTransitGateway": {
      "Properties": {
        "AutoAcceptSharedAttachments": "enable",
        "DefaultRouteTableAssociation": "disable",
        "DefaultRouteTablePropagation": "disable",
        "Description": "IS Transit Gateway",
        "Tags": [
          {
            "Key": "Name",
            "Value": "IS Transit Gateway",
          },
        ],
        "VpnEcmpSupport": "disable",
      },
      "Type": "AWS::EC2::TransitGateway",
    },
    "ISTransitGatewayAttachmentEgress": {
      "DependsOn": [
        "ISTransitGateway",
      ],
      "Properties": {
        "SubnetIds": [
          {
            "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet1Subnet70686A5C",
          },
          {
            "Ref": "ISAppStreamMgmtVPCprivateinnovationmgmtSubnet2Subnet58B91D59",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "IS-TG-Egress-VPC-Private_SubNet-Attachment",
          },
        ],
        "TransitGatewayId": {
          "Ref": "ISTransitGateway",
        },
        "VpcId": {
          "Ref": "ISAppStreamMgmtVPC7423BC26",
        },
      },
      "Type": "AWS::EC2::TransitGatewayAttachment",
    },
    "mgmtbucket71519174": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "mgmt-ct-",
              {
                "Ref": "UUID",
              },
            ],
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "mgmtbucketalA349A638",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "mgmtbucketPolicy0C4C568E": {
      "Properties": {
        "Bucket": {
          "Ref": "mgmtbucket71519174",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "mgmtbucket71519174",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "mgmtbucket71519174",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "mgmtbucket71519174",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "mgmtbucket71519174",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "mgmtbucketalA349A638": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "mgmt-ct-",
              {
                "Ref": "UUID",
              },
              "-al",
            ],
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "mgmtflowlogsbucket5BA94782": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "mgmt-fl-",
              {
                "Ref": "UUID",
              },
            ],
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "mgmtflowlogsbucketal21FC00DB",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "mgmtflowlogsbucketPolicy5B1CD48D": {
      "Properties": {
        "Bucket": {
          "Ref": "mgmtflowlogsbucket5BA94782",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "mgmtflowlogsbucket5BA94782",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "mgmtflowlogsbucket5BA94782",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "mgmtflowlogsbucketal21FC00DB": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "mgmt-fl-",
              {
                "Ref": "UUID",
              },
              "-al",
            ],
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`InnovationSandboxSbx 1`] = `
{
  "Mappings": {
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com",
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com",
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com",
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "EIP": {
      "Description": "EIP",
      "Type": "String",
    },
    "EIP2": {
      "Description": "EIP",
      "Type": "String",
    },
    "MgmtID": {
      "Description": "MgmtID",
      "Type": "String",
    },
    "TgwID": {
      "Description": "TgwID",
      "Type": "String",
    },
    "UUID": {
      "Description": "UUID",
      "Type": "String",
    },
  },
  "Resources": {
    "CloudTrailA62D711D": {
      "DependsOn": [
        "sandboxbucketPolicy3505C1DD",
      ],
      "Properties": {
        "EnableLogFileValidation": true,
        "EventSelectors": [],
        "IncludeGlobalServiceEvents": true,
        "IsLogging": true,
        "IsMultiRegionTrail": true,
        "S3BucketName": {
          "Ref": "sandboxbucket88D01CB1",
        },
        "TrailName": "sandbox-cloudtrail",
      },
      "Type": "AWS::CloudTrail::Trail",
    },
    "FlowLogsFlowLog13041F74": {
      "DependsOn": [
        "sandboxflowlogsbucketPolicy6EE9EF59",
      ],
      "Properties": {
        "LogDestination": {
          "Fn::GetAtt": [
            "sandboxflowlogsbucket1E067CBE",
            "Arn",
          ],
        },
        "LogDestinationType": "s3",
        "ResourceId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "ISSBXVPCA7ADE657": {
      "Properties": {
        "CidrBlock": "192.168.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ISSBXVPCprivateinnovationsandbox1Subnet1RouteTable73CE5343": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_1Subnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISSBXVPCprivateinnovationsandbox1Subnet1RouteTableAssociationC373FC4A": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox1Subnet1RouteTable73CE5343",
        },
        "SubnetId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox1Subnet1Subnet28A493C3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISSBXVPCprivateinnovationsandbox1Subnet1Subnet28A493C3": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "192.168.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private_innovation_sandbox_1",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_1Subnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISSBXVPCprivateinnovationsandbox1Subnet2RouteTable6433129B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_1Subnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISSBXVPCprivateinnovationsandbox1Subnet2RouteTableAssociation52E25FB4": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox1Subnet2RouteTable6433129B",
        },
        "SubnetId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox1Subnet2Subnet1CEF098E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISSBXVPCprivateinnovationsandbox1Subnet2Subnet1CEF098E": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "192.168.1.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private_innovation_sandbox_1",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_1Subnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISSBXVPCprivateinnovationsandbox2Subnet1RouteTableAssociationCB576240": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox2Subnet1RouteTableD429FD4A",
        },
        "SubnetId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox2Subnet1Subnet0011FAE5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISSBXVPCprivateinnovationsandbox2Subnet1RouteTableD429FD4A": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_2Subnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISSBXVPCprivateinnovationsandbox2Subnet1Subnet0011FAE5": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "192.168.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private_innovation_sandbox_2",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_2Subnet1",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISSBXVPCprivateinnovationsandbox2Subnet2RouteTable03944F8C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_2Subnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ISSBXVPCprivateinnovationsandbox2Subnet2RouteTableAssociation99100213": {
      "Properties": {
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox2Subnet2RouteTable03944F8C",
        },
        "SubnetId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox2Subnet2SubnetC1884F65",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ISSBXVPCprivateinnovationsandbox2Subnet2SubnetC1884F65": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "192.168.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private_innovation_sandbox_2",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "InnovationSandboxSbxTestStack/ISSBXVPC/private_innovation_sandbox_2Subnet2",
          },
        ],
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ISSBXVPCroute0": {
      "DependsOn": [
        "ISTransitGatewayAttachmentSbx",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox1Subnet1RouteTable73CE5343",
        },
        "TransitGatewayId": {
          "Ref": "TgwID",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISSBXVPCroute1": {
      "DependsOn": [
        "ISTransitGatewayAttachmentSbx",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox1Subnet2RouteTable6433129B",
        },
        "TransitGatewayId": {
          "Ref": "TgwID",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISSBXVPCroute2": {
      "DependsOn": [
        "ISTransitGatewayAttachmentSbx",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox2Subnet1RouteTableD429FD4A",
        },
        "TransitGatewayId": {
          "Ref": "TgwID",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISSBXVPCroute3": {
      "DependsOn": [
        "ISTransitGatewayAttachmentSbx",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "ISSBXVPCprivateinnovationsandbox2Subnet2RouteTable03944F8C",
        },
        "TransitGatewayId": {
          "Ref": "TgwID",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ISTransitGatewayAttachmentSbx": {
      "Properties": {
        "SubnetIds": [
          {
            "Ref": "ISSBXVPCprivateinnovationsandbox1Subnet1Subnet28A493C3",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "IS-TG-Sbx-VPC-Private_SubNet-Attachment",
          },
        ],
        "TransitGatewayId": {
          "Ref": "TgwID",
        },
        "VpcId": {
          "Ref": "ISSBXVPCA7ADE657",
        },
      },
      "Type": "AWS::EC2::TransitGatewayAttachment",
    },
    "ManagedPolicy7BAB786E": {
      "Properties": {
        "Description": "",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Condition": {
                "IpAddress": {
                  "aws:SourceIp": [
                    {
                      "Ref": "EIP",
                    },
                    {
                      "Ref": "EIP2",
                    },
                    "10.0.0.0/16",
                    "172.16.0.0/12",
                    "192.168.0.0/16",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowAppStreamIPs",
            },
            {
              "Action": "*",
              "Condition": {
                "Bool": {
                  "aws:ViaAWSService": "true",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AllowAWSServiceCalls",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "SandboxEC2InstanceProfile": {
      "Properties": {
        "Roles": [
          {
            "Ref": "SandboxServiceRoleDAAF0320",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "SandboxLoginRole3E38BC4D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "MgmtID",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Ref": "ManagedPolicy7BAB786E",
          },
        ],
        "RoleName": "SandboxLoginRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "SandboxServiceRoleDAAF0320": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "athena.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "autoscaling.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "config-multiaccountsetup.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dynamodb.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dynamodb.application-autoscaling.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.application-autoscaling.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2fleet.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2scheduled.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs.application-autoscaling.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "edgelambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "glue.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "greengrass.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "guardduty.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "health.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "iam.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kinesis.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kinesisanalytics.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kms.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lakeformation.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "macie.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "opsworks-cm.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "opsworks.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "organizations.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "quicksight.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "rds.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "redshift.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "rekognition.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "secretsmanager.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "servicecatalog.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "spotfleet.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sqs.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sso.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "storagegateway.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sts.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "support.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "swf.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "SandboxServiceRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "SandboxServiceRoleDefaultPolicyBD0FD366": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SandboxServiceRoleDefaultPolicyBD0FD366",
        "Roles": [
          {
            "Ref": "SandboxServiceRoleDAAF0320",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "sandboxbucket88D01CB1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "sandbox-ct-",
              {
                "Ref": "UUID",
              },
            ],
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "sandboxbucketal634316B9",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "sandboxbucketPolicy3505C1DD": {
      "Properties": {
        "Bucket": {
          "Ref": "sandboxbucket88D01CB1",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "sandboxbucket88D01CB1",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "sandboxbucket88D01CB1",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "sandboxbucket88D01CB1",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "sandboxbucket88D01CB1",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "sandboxbucketal634316B9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "sandbox-ct-",
              {
                "Ref": "UUID",
              },
              "-al",
            ],
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "sandboxflowlogsbucket1E067CBE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "sandbox-fl-",
              {
                "Ref": "UUID",
              },
            ],
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "sandboxflowlogsbucketalC42A8436",
          },
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "sandboxflowlogsbucketPolicy6EE9EF59": {
      "Properties": {
        "Bucket": {
          "Ref": "sandboxflowlogsbucket1E067CBE",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "sandboxflowlogsbucket1E067CBE",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "sandboxflowlogsbucket1E067CBE",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "sandboxflowlogsbucketalC42A8436": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "sandbox-fl-",
              {
                "Ref": "UUID",
              },
              "-al",
            ],
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`InnovationSandboxTgw 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "EGREEATTCH": {
      "Description": "EGREEATTCH",
      "Type": "String",
    },
    "SBXTGATTCH": {
      "Description": "SBXTGATTCH",
      "Type": "String",
    },
    "TGID": {
      "Description": "TGID",
      "Type": "String",
    },
  },
  "Resources": {
    "AssocForEgressVPC": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "EGREEATTCH",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "RouteTowardsSBX",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "AssocForSbx": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SBXTGATTCH",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "RouteTowardsIGW",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "RouteFromEgressVPCToSbxForCallBack": {
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "SBXTGATTCH",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "RouteTowardsSBX",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "RouteFromSbxToEgressVPC": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "TransitGatewayAttachmentId": {
          "Ref": "EGREEATTCH",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "RouteTowardsIGW",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "RouteTowardsIGW": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Route Towards IGW - Innovation Sandbox",
          },
        ],
        "TransitGatewayId": {
          "Ref": "TGID",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTable",
    },
    "RouteTowardsSBX": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Route Towards SBX - Innovation Sandbox",
          },
        ],
        "TransitGatewayId": {
          "Ref": "TGID",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTable",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
